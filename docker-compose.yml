version: '3.8'

services:
  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    build:
      context: ./backend/naming_server
    ports:
      - "8761:8761"
    networks:
      - mynetwork
    environment:
      - spring.application.name=naming-server
      - server.port=8761
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
    restart: always

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_USER: springstudent
      MYSQL_PASSWORD: springstudent
      MYSQL_DATABASE: clothing_store
      MYSQL_ROOT_PASSWORD: springstudent
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mynetwork
    restart: always

  catalog-service:
    container_name: catalog-service
    build:
      context: ./backend/catalog_service
    ports:
      - "8001:8001"
    depends_on:
      - mysql
      - eureka-server
    environment:
      - spring.application.name=catalog-service
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysql:3306/clothing_store
      - spring.datasource.username=springstudent
      - spring.datasource.password=springstudent
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
    networks:
      - mynetwork
    restart: always

  orders-service:
    container_name: orders-service
    build:
      context: ./backend/orders_service
    ports:
      - "8200:8200"
    depends_on:
      - eureka-server
    environment:
      - spring.application.name=orders-service
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    networks:
      - mynetwork
    restart: always

  auth-service:
    container_name: auth-service
    build:
      context: ./backend/auth_service
    ports:
      - "8100:8100"
    depends_on:
      - eureka-server
    environment:
      - spring.application.name=auth-service
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
    networks:
      - mynetwork
    restart: always

  api-gateway:
    container_name: api-gateway
    build:
      context: ./backend/api_gateway
    ports:
      - "8765:8765"
    depends_on:
      - eureka-server
      - catalog-service
      - auth-service
    environment:
      - spring.application.name=api-gateway
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.cloud.gateway.discovery.locator.enabled=true
      - spring.cloud.gateway.discovery.locator.lower-case-service-id=true
    networks:
      - mynetwork
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./frontend/shop-app
    ports:
      - "5173:5173"
    depends_on:
      - api-gateway
    stdin_open: true
    tty: true
    networks:
      - mynetwork
    restart: always

networks:
  mynetwork:
    driver: bridge

volumes:
  mysql-data:
