spring.application.name=orders-service
spring.main.banner-mode=off
server.port=8200

# JPA and MySQL configuration
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://mysql-service:3306/clothing_store
spring.datasource.username=springstudent
spring.datasource.password=springstudent
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

# Frontend URL
frontend.url=http://localhost:5173

catalog.service.url=http://localhost:8001
springdoc.swagger-ui.path=/swagger-ui.html
Stripe.apiKey=${STRIPE_KEY_SECRET}

auth.service.url=http://${AUTH_SERVICE_HOST:localhost}:8100/api/auth

# RateLimiter dla PaymentService
resilience4j.ratelimiter.paymentService.limitForPeriod=10
resilience4j.ratelimiter.paymentService.limitRefreshPeriod=1s
resilience4j.ratelimiter.paymentService.timeoutDuration=500ms

# CircuitBreaker dla PaymentService
resilience4j.circuitbreaker.paymentService.registerHealthIndicator=true
resilience4j.circuitbreaker.paymentService.slidingWindowSize=100
resilience4j.circuitbreaker.paymentService.failureRateThreshold=50
resilience4j.circuitbreaker.paymentService.waitDurationInOpenState=10000ms
resilience4j.circuitbreaker.paymentService.ringBufferSizeInClosedState=10
resilience4j.circuitbreaker.paymentService.ringBufferSizeInHalfOpenState=5

spring.cloud.vault.enabled=true
spring.cloud.vault.token=${SPRING_CLOUD_VAULT_TOKEN}
spring.cloud.vault.uri=http://vault:8200